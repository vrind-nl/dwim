{"componentChunkName":"component---src-templates-post-jsx","path":"/the-hypervisor-conundrum","result":{"data":{"orgContent":{"metadata":{"title":"The Hypervisor Conundrum","date":"June 21st, 2022","tags":["windows"]},"html":"<div class=\"section\"><p>Windows 11 Pro came pre-installed with a set of <a href=\"https://docs.microsoft.com/en-us/virtualization/\">virtualization features</a>:</p><ul><li>Microsoft's own <a href=\"https://en.wikipedia.org/wiki/Hypervisor\">hypervisor</a>: <a href=\"https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/about/\">Hyper-V</a><ul><li>Hyper-V Managament Tools<ul><li>Hyper-V GUI Management Tools</li><li>Hyper-V Module for Windows PowerShell</li></ul></li><li>Hyper-V Platform<ul><li>Hyper-V Hypervisor (<i>We'll come back to this one later</i>)</li><li>Hyper-V Services</li></ul></li></ul></li><li>Virtual Machine Platform</li><li>Windows Hypervisor Platform</li><li>Windows Sandbox</li><li>Windows Subsystem for Linux</li></ul><p>Despite my <a href=\"/new-laptop-arrived\">misgivings</a> about Hyper-V itself, I was pleasantly surprised that WSL now included <a href=\"/wsl-gui\">graphical abilities</a>. It also turned out that Docker used WSL, which in retrospect was a sign of what was to come.</p><p>Because last week I decided to experiment with pen-testing. The industry standard for a pen-testing lab seemed to be <a href=\"https://www.kali.org/\">Kali Linux</a> on <a href=\"https://www.kali.org/get-kali/#kali-virtual-machines\">VirtualBox</a>. So, <code>winget install virtualbox</code> and I'd be ready to go. Or so I thought.</p><p>Modern computers come with hardware support for virtualization. The thing is that only one application can use this support at any one time. And on Windows that is Hyper-V, so when Hyper-V is running, other hypervisors need to access the virtualization hardware support <i>through</i> Hyper-V. Which makes VirtualBox painfully slow: I had ample time to admire the frames in the animated Kali-logo.</p><p>To disable all virtualization features, you need to perform some arcane <a href=\"https://docs.microsoft.com/en-us/troubleshoot/windows-client/application-management/virtualization-apps-not-work-with-hyper-v#how-to-disable-hyper-v\">magic</a>. And with Hyper-V disabled, WSL and Docker also go out the Window (<i>sic</i>), so I would have to switch on a regular basis. This is highly simplified by <a href=\"https://unclassified.software/en/apps/hypervswitch\">HyperVSwitch</a> (be careful: it reboots your machine without warning), but I would still need to restart my system every time...</p><p>But Internet <a href=\"https://stackoverflow.com/a/69896662/5251833\">posts</a> kept telling me it's possible to have WSL and VirtualBox running simultaneously, because WSL uses the Hyper-V <i>architecture</i> but not the Hyper-V <i>feature</i>. After completely <a href=\"https://pureinfotech.com/uninstall-wsl2-windows-10/\">uninstalling WSL</a> (and turning of <i>all</i> virtualization features, and rebooting) and then <code>wsl --install</code> (and rebooting) only the features <i>Virtual Machine Platform</i> and <i>Windows Subsystem for Linux</i> were back on again. WSL was now running fine, but VirtualBox was crawling in software virtualization mode.</p><p>Running <code>bcdedit /set hypervisorlaunchtype off</code> (and rebooting) allowed VirtualBox to run in hardware virtualization mode, but now WSL stopped working: <code>Please enable the Virtual Machine Platform Windows feature and ensure virtualization is enabled in the BIOS</code>.</p><p>So, with <code>hypervisorlaunchtype off</code>, VirtualBox is fine, but WSL not. And with <code>hypervisorlaunchtype auto</code>, WSL is fine, but VirtualBox is painfully slow in software virtualization mode. And switching requires a reboot. Every time.</p><p>So, after three weeks of using Windows, I am considering moving back to Linux again...</p></div>"}},"pageContext":{"slug":"/the-hypervisor-conundrum","previous":{"fields":{"slug":"/wsl-gui"},"metadata":{"title":"WSL GUI","date":"June 13th, 2022","tags":["wsl"]}},"next":null}},"staticQueryHashes":["1056462243"]}