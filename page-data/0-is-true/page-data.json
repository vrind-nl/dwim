{"componentChunkName":"component---src-templates-post-jsx","path":"/0-is-true","result":{"data":{"orgContent":{"metadata":{"title":"0 is true","date":"June 27th, 2021","tags":["emacs","dev"]},"html":"<div class=\"section\"><p>I was reading, as one does on a Sunday morning, <a href=\"https://www.gnu.org/software/emacs/manual/eintr.html\">An Introduction to Programming in Emacs Lisp</a> and came across the statement <a href=\"https://www.gnu.org/software/emacs/manual/html_node/eintr/Truth-_0026-Falsehood.html\">“false” is just our old friend nil. Anything else—anything at all—is “true”</a>.</p><p>Which made me blink, because in most other programming languages this is not the case. So, I checked, and found the statement to be correct (duh\\trade):</p><pre><code class=\"language-bash\"> *** Welcome to IELM ***  Type <span class=\"token punctuation\">(</span>describe-mode<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> help.\nELISP<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>not nil<span class=\"token punctuation\">)</span>\nt\nELISP<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>not <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nnil\nELISP<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>not <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\nnil</code></pre><p>I would expect elisp to be similar to other scripted languages. For example, Javascript has a whole list of <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\">falsy</a> values, including (testing with negation, to cast to boolean):</p><pre><code class=\"language-bash\">Welcome to Node.js v12.21.0.\nType <span class=\"token string\">\".help\"</span> <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> information.\n<span class=\"token operator\">></span> <span class=\"token operator\">!</span>undefined\n<span class=\"token boolean\">true</span>\n<span class=\"token operator\">></span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n<span class=\"token boolean\">true</span>\n<span class=\"token operator\">></span> <span class=\"token operator\">!</span><span class=\"token string\">\"\"</span>\n<span class=\"token boolean\">true</span></code></pre><p>Or in <a href=\"https://docs.python.org/2.4/lib/truth.html\">Python</a>:</p><pre><code class=\"language-bash\">Python <span class=\"token number\">3.9</span>.5 <span class=\"token punctuation\">(</span>default, May <span class=\"token number\">11</span> <span class=\"token number\">2021</span>, 08:20:37<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>GCC <span class=\"token number\">10.3</span>.0<span class=\"token punctuation\">]</span> on linux\nType <span class=\"token string\">\"help\"</span>, <span class=\"token string\">\"copyright\"</span>, <span class=\"token string\">\"credits\"</span> or <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> information.\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> not None\nTrue\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> not <span class=\"token number\">0</span>\nTrue\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> not <span class=\"token string\">\"\"</span>\nTrue</code></pre><p>Or maybe elisp would be closer to C, because that's what its base functions are written in. But even that is a bit different:</p><pre><code class=\"language-c\">  <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n  <span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NULL = %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0 = %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\"\\\" = %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre><p>gives</p><pre><code class=\"language-sh\">  NULL <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n  <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n  <span class=\"token string\">\"\"</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></code></pre><p>So, elisp is unlike any other language I know. Weird (but so are <a href=\"https://blog.robertelder.org/weird-c-syntax/\">C</a>, <a href=\"https://colab.research.google.com/github/satwikkansal/wtfpython/blob/master/irrelevant/wtf.ipynb#scrollTo=mW-Bnl_i1u6v\">Python</a> and <a href=\"https://jsisweird.com/\">JS</a>). And good to be aware of.</p></div>"}},"pageContext":{"slug":"/0-is-true","previous":{"fields":{"slug":"/i-bit-the-bullet"},"metadata":{"title":"I bit the bullet","date":"June 18th, 2021","tags":["sysop","vm"]}},"next":{"fields":{"slug":"/still-learning"},"metadata":{"title":"Still learning","date":"July 8th, 2021","tags":["dev","productivity"]}}}},"staticQueryHashes":["1056462243"]}