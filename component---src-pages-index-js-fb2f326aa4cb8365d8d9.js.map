{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/Teaser.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/Teaser.module.css"],"names":["page","children","useStaticQuery","site","allOrgContent","siteMetadata","title","description","pinned","nodes","className","to","style","float","onClick","navigate","map","post","key","fields","slug","metadata","href","info","email","author","version","html","excerpt","text","replace","cut","indexOf","substring","styles","date","dangerouslySetInnerHTML","__html","data","location","slice","props","nr","Teaser","module","exports"],"mappings":"2FAAA,qFA0Ce,gBAAyB,IAAtBA,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SACtB,EAjCOC,YAAe,cAiCdC,EAAI,EAAJA,KAAMC,EAAa,EAAbA,cACd,EAA+BD,EAAKE,aAA5BC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YACTC,EAASJ,EAAcK,MAE7B,OACE,oCACE,+BAAQH,GAASN,EAAO,MAAQA,EAAO,KACvC,yBAAKU,UAAU,UACb,kBAAC,IAAI,CAACC,GAAG,IAAIC,MAAO,CAAEC,MAAO,SAC3B,4BAAKP,IAEP,uBAAGM,MAAO,CAAEC,MAAO,UACjB,2BAAIN,KAGR,yBAAKG,UAAU,UACb,yBAAKE,MAAO,CAAEC,MAAO,SACnB,4BAAQC,QAAS,kBAAMC,mBAAS,OAAK,QACrC,4BAAQD,QAAS,kBAAMC,mBAAS,WAAS,QACzC,4BAAQD,QAAS,kBAAMC,mBAAS,cAAY,YAE9C,yBAAKH,MAAO,CAAEC,MAAO,UAClBL,EAAOQ,KAAI,SAAAC,GAAI,OACd,4BACEC,IAAKD,EAAKE,OAAOC,KACjBN,QAAS,kBAAMC,mBAASE,EAAKE,OAAOC,QAEnCH,EAAKI,SAASf,UAGnB,4BAAQQ,QAAS,kBAAMC,mBAAS,cAC9B,kBAAC,IAAK,OAER,4BAAQD,QAAS,kBAAMC,mBAAS,sCAC9B,kBAAC,IAAQ,SAIdd,EACD,0CACc,uBAAGqB,KAAM,UAAYC,EAAKC,OAAQD,EAAKE,QAAY,MAC9DF,EAAKG,Y,sIC9EC,cAAiC,IAA9BL,EAAQ,EAARA,SAAUF,EAAM,EAANA,OAAQQ,EAAI,EAAJA,KAC9BC,EAAU,QACd,GAAID,EAAM,CACR,IAAME,EAAOF,EAAKG,QAAQ,SAAU,KAAKA,QAAQ,aAAc,IACzDC,EAAMF,EAAKG,QAAQ,IAAK,KAC9BJ,EAAUG,EAAM,EAAIF,EAAKI,UAAU,EAAGF,EAAM,GAAKJ,EAInD,OACE,yBAAKjB,UAAU,SACb,uBAAGA,UAAWwB,IAAOC,MAAOd,EAASc,MACrC,kBAAC,IAAI,CAACxB,GAAIQ,EAAOC,MACf,4BAAKC,EAASf,QAEhB,yBAAK8B,wBAAyB,CAAEC,OAAQT,O,UCb/B,sBAAyB,IAAtBU,EAAI,EAAJA,KACV7B,GADwB,EAAR8B,SACRD,EAAKlC,cAAcK,OAEjC,OACE,kBAAC,IAAM,CAACT,KAAK,QACVS,EAAM+B,MAAM,EAAG,GAAGxB,KAAI,SAACyB,EAAOC,GAAE,OAC/B,kBAACC,EAAM,eAACzB,IAAKwB,GAAQD,U,gpBCb7BG,EAAOC,QAAU,CAAC,KAAO","file":"component---src-pages-index-js-fb2f326aa4cb8365d8d9.js","sourcesContent":["import React from \"react\";\n\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport { navigate } from \"@reach/router\";\nimport { FaGithub, FaRss } from \"react-icons/fa\";\n\nimport \"./Layout.css\";\nimport info from \"../../package.json\";\n\nconst useSiteMetadata = () => {\n  return useStaticQuery(\n    graphql`\n      query SITE_METADATA_QUERY {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n\n        allOrgContent(\n          sort: { fields: [metadata___date], order: DESC }\n          filter: {\n            metadata: { keyword: { eq: \"PUBLISHED\" }, pinned: { eq: \"t\" } }\n          }\n        ) {\n          nodes {\n            id\n            metadata {\n              title\n              date(formatString: \"YYYY MMMM Do\")\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    `\n  );\n};\n\nexport default ({ page, children }) => {\n  const { site, allOrgContent } = useSiteMetadata();\n  const { title, description } = site.siteMetadata;\n  const pinned = allOrgContent.nodes;\n\n  return (\n    <>\n      <title>{title + (page ? \" - \" + page : \"\")}</title>\n      <div className=\"header\">\n        <Link to=\"/\" style={{ float: \"left\" }}>\n          <h1>{title}</h1>\n        </Link>\n        <p style={{ float: \"right\" }}>\n          <i>{description}</i>\n        </p>\n      </div>\n      <div className=\"header\">\n        <div style={{ float: \"left\" }}>\n          <button onClick={() => navigate(\"/\")}>Home</button>\n          <button onClick={() => navigate(\"/tags\")}>Tags</button>\n          <button onClick={() => navigate(\"/archive\")}>Archive</button>\n        </div>\n        <div style={{ float: \"right\" }}>\n          {pinned.map(post => (\n            <button\n              key={post.fields.slug}\n              onClick={() => navigate(post.fields.slug)}\n            >\n              {post.metadata.title}\n            </button>\n          ))}\n          <button onClick={() => navigate(\"/rss.xml\")}>\n            <FaRss />\n          </button>\n          <button onClick={() => navigate(\"https://github.com/vrind-nl/dwim\")}>\n            <FaGithub />\n          </button>\n        </div>\n      </div>\n      {children}\n      <footer>\n        &copy; 2020 <a href={\"mailto:\" + info.email}>{info.author}</a>, v\n        {info.version}\n      </footer>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport styles from \"./Teaser.module.css\";\n\nexport default ({ metadata, fields, html }) => {\n  var excerpt = \"ERROR\";\n  if (html) {\n    const text = html.replace(/\\\\n*/gm, \" \").replace(/<[^>]*>?/gm, \"\");\n    const cut = text.indexOf(\".\", 300);\n    excerpt = cut > 0 ? text.substring(0, cut + 1) : html;\n    // const cut = html.indexOf(\"<p>\", 200);\n    // const excerpt = cut > 0 ? html.substring(0, cut - 1) : html;\n  }\n  return (\n    <div className=\"block\">\n      <p className={styles.date}>{metadata.date}</p>\n      <Link to={fields.slug}>\n        <h2>{metadata.title}</h2>\n      </Link>\n      <div dangerouslySetInnerHTML={{ __html: excerpt }}></div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Teaser from \"../components/Teaser\";\nimport \"./index.css\";\n\nexport default ({ data, location }) => {\n  const nodes = data.allOrgContent.nodes;\n\n  return (\n    <Layout page=\"Home\">\n      {nodes.slice(0, 7).map((props, nr) => (\n        <Teaser key={nr} {...props} />\n      ))}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query SITE_INDEX_QUERY {\n    allOrgContent(\n      sort: { fields: [metadata___date], order: DESC }\n      filter: { metadata: { pinned: { ne: \"t\" } } }\n    ) {\n      nodes {\n        id\n        metadata {\n          title\n          date(formatString: \"YYYY MMMM Do\")\n          keyword\n          pinned\n        }\n        fields {\n          slug\n        }\n        html\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"Teaser-module--date--1hCD-\"};"],"sourceRoot":""}