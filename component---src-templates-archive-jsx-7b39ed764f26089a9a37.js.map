{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/Archive.jsx"],"names":["page","children","useStaticQuery","site","allOrgContent","siteMetadata","title","description","pinned","nodes","className","to","style","float","onClick","navigate","map","post","key","fields","slug","metadata","href","info","email","author","version","posts","pageContext","date"],"mappings":"2FAAA,qFA0Ce,gBAAyB,IAAtBA,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SACtB,EAjCOC,YAAe,cAiCdC,EAAI,EAAJA,KAAMC,EAAa,EAAbA,cACd,EAA+BD,EAAKE,aAA5BC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YACTC,EAASJ,EAAcK,MAE7B,OACE,oCACE,+BAAQH,GAASN,EAAO,MAAQA,EAAO,KACvC,yBAAKU,UAAU,UACb,kBAAC,IAAI,CAACC,GAAG,IAAIC,MAAO,CAAEC,MAAO,SAC3B,4BAAKP,IAEP,uBAAGM,MAAO,CAAEC,MAAO,UACjB,2BAAIN,KAGR,yBAAKG,UAAU,UACb,yBAAKE,MAAO,CAAEC,MAAO,SACnB,4BAAQC,QAAS,kBAAMC,mBAAS,OAAK,QACrC,4BAAQD,QAAS,kBAAMC,mBAAS,WAAS,QACzC,4BAAQD,QAAS,kBAAMC,mBAAS,cAAY,YAE9C,yBAAKH,MAAO,CAAEC,MAAO,UAClBL,EAAOQ,KAAI,SAAAC,GAAI,OACd,4BACEC,IAAKD,EAAKE,OAAOC,KACjBN,QAAS,kBAAMC,mBAASE,EAAKE,OAAOC,QAEnCH,EAAKI,SAASf,UAGnB,4BAAQQ,QAAS,kBAAMC,mBAAS,cAC9B,kBAAC,IAAK,OAER,4BAAQD,QAAS,kBAAMC,mBAAS,sCAC9B,kBAAC,IAAQ,SAIdd,EACD,0CACc,uBAAGqB,KAAM,UAAYC,EAAKC,OAAQD,EAAKE,QAAY,MAC9DF,EAAKG,Y,kCCpFd,wDAMe,sBAAsB,IAC3BC,EADmB,EAAXC,YACRD,MAER,OACE,kBAAC,IAAM,CAAC3B,KAAK,WACX,uCACA,4BACG2B,EAAMX,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,OAAOC,MAClBH,EAAKI,SAASQ,KAAI,IAAG,IACtB,kBAAC,IAAI,CAAClB,GAAIM,EAAKE,OAAOC,MAAOH,EAAKI,SAASf,e","file":"component---src-templates-archive-jsx-7b39ed764f26089a9a37.js","sourcesContent":["import React from \"react\";\n\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport { navigate } from \"@reach/router\";\nimport { FaGithub, FaRss } from \"react-icons/fa\";\n\nimport \"./Layout.css\";\nimport info from \"../../package.json\";\n\nconst useSiteMetadata = () => {\n  return useStaticQuery(\n    graphql`\n      query SITE_METADATA_QUERY {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n\n        allOrgContent(\n          sort: { fields: [metadata___date], order: DESC }\n          filter: {\n            metadata: { keyword: { eq: \"PUBLISHED\" }, pinned: { eq: \"t\" } }\n          }\n        ) {\n          nodes {\n            id\n            metadata {\n              title\n              date(formatString: \"YYYY MMMM Do\")\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    `\n  );\n};\n\nexport default ({ page, children }) => {\n  const { site, allOrgContent } = useSiteMetadata();\n  const { title, description } = site.siteMetadata;\n  const pinned = allOrgContent.nodes;\n\n  return (\n    <>\n      <title>{title + (page ? \" - \" + page : \"\")}</title>\n      <div className=\"header\">\n        <Link to=\"/\" style={{ float: \"left\" }}>\n          <h1>{title}</h1>\n        </Link>\n        <p style={{ float: \"right\" }}>\n          <i>{description}</i>\n        </p>\n      </div>\n      <div className=\"header\">\n        <div style={{ float: \"left\" }}>\n          <button onClick={() => navigate(\"/\")}>Home</button>\n          <button onClick={() => navigate(\"/tags\")}>Tags</button>\n          <button onClick={() => navigate(\"/archive\")}>Archive</button>\n        </div>\n        <div style={{ float: \"right\" }}>\n          {pinned.map(post => (\n            <button\n              key={post.fields.slug}\n              onClick={() => navigate(post.fields.slug)}\n            >\n              {post.metadata.title}\n            </button>\n          ))}\n          <button onClick={() => navigate(\"/rss.xml\")}>\n            <FaRss />\n          </button>\n          <button onClick={() => navigate(\"https://github.com/vrind-nl/dwim\")}>\n            <FaGithub />\n          </button>\n        </div>\n      </div>\n      {children}\n      <footer>\n        &copy; 2020 <a href={\"mailto:\" + info.email}>{info.author}</a>, v\n        {info.version}\n      </footer>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\n\nexport default ({ pageContext }) => {\n  const { posts } = pageContext;\n\n  return (\n    <Layout page=\"Archive\">\n      <h1>Archive</h1>\n      <ul>\n        {posts.map(post => (\n          <li key={post.fields.slug}>\n            {post.metadata.date}:{\" \"}\n            <Link to={post.fields.slug}>{post.metadata.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}